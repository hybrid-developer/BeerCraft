apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    defaultConfig {
        compileSdkVersion versions.compileSdkVersion
        buildToolsVersion versions.toolsVersion
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionName = getVersionName()
        versionCode = getVersionCode()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation project(':core-mvi')
    implementation project(':core-viewmodel')
    implementation project(':core-ui')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha06'

    implementation "androidx.arch.core:core-runtime:${versions.archRuntime}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycleExtensions}"
    implementation("android.arch.navigation:navigation-ui-ktx:${versions.archNavigation}") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    implementation("android.arch.navigation:navigation-fragment-ktx:${versions.archNavigation}") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"

    /* rxjava2 */
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    implementation("com.jakewharton.rxbinding2:rxbinding:${versions.rxBinding}") {
        exclude group: 'io.reactivex.rxjava2', module: 'rxandroid'
    }

    /* retrofit */
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"

    /* dagger-hilt */
    implementation "com.google.dagger:hilt-android:${versions.dagger_hilt}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.dagger_hilt_androidx}"
    annotationProcessor "androidx.hilt:hilt-compiler:${versions.dagger_hilt_androidx}"
    kapt "androidx.hilt:hilt-compiler:${versions.dagger_hilt_androidx}"

    /* junit */
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.junit.platform:junit-platform-runner:${versions.junitPlatformRunner}"

    /* assertj */
    testImplementation "org.assertj:assertj-core:${versions.assertj}"

    /* mockito */
    testImplementation "com.nhaarman:mockito-kotlin:${versions.mockitoKotlin}"

}