// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "org.sonarqube"
apply from: './library-versions.gradle'

buildscript {
  ext.kotlin_version = "1.3.72"
  ext.dagger_hilt = "2.28-alpha"

  repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:4.0.0"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.google.dagger:hilt-android-gradle-plugin:$dagger_hilt"
    classpath "com.github.dawnwords:jacoco-badge-gradle-plugin:0.2.0"
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
    classpath 'org.jlleitschuh.gradle:ktlint-gradle:9.2.1'
    classpath 'org.jacoco:org.jacoco.core:0.8.5'
    classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }
}

apply from: "${rootDir}/jacoco.gradle"

task clean(type: Delete) {
  delete rootProject.buildDir
}

ext {
  versionMajor = 1
  versionMinor = 6
  versionPatch = 0
  ciJobId = System.getenv("CI_JOB_ID")
  branch = System.getenv("CI_COMMIT_REF_NAME")
}

static def gitTag() {
  return 'git describe --tags --long --always'.execute().text.split('-').first()
}

static def getNumberOfCommits() {
  def command = 'git rev-list tag.. --count'.replace("tag", gitTag())
  return command.execute().text.trim()
}

def getAppVersionCode() {
  def majorMultiplier = 1000000
  def minorMultiplier = 1000
  return versionMajor * majorMultiplier + versionMinor * minorMultiplier + versionPatch
}

def getAppVersionName() {
  return versionMajor + "." + versionMinor + "." + versionPatch +
          (ciJobId != null ? "" + " ($ciJobId)" : "") +
          ((branch != null && branch.toString().startsWith("feature")) ? " [$branch]" : "")
}

task installGitHook(type: Copy) {
  from new File(rootProject.rootDir, 'pre-commit')
  into { new File(rootProject.rootDir, '.git/hooks') }
  fileMode 0777
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook